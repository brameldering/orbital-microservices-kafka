CREATE SCHEMA INVENTORY;

-- Following is a copy of Product table owned by Product microservice */
CREATE TABLE INVENTORY.PRODUCT(
  PRODUCT_ID VARCHAR(14) PRIMARY KEY,
  NAME VARCHAR(256) NOT NULL UNIQUE,
  BRAND VARCHAR(256) NOT NULL,
  CATEGORY VARCHAR(256) NOT NULL
);

CREATE TABLE INVENTORY.PRODUCT_QUANTITY(
  PRODUCT_ID VARCHAR(14) NOT NULL,
  -- LOCATION_ID VARCHAR(14) NOT NULL,
  QUANTITY BIGINT NOT NULL,
  PRIMARY KEY (PRODUCT_ID)
  -- PRIMARY KEY (PRODUCT_ID, LOCATION_ID)
);

CREATE TABLE INVENTORY.SERIAL_NUMBER(
  PRODUCT_ID VARCHAR(14) NOT NULL,
  -- LOCATION_ID VARCHAR(14) NOT NULL,
  SERIAL_NUMBER VARCHAR(64) NOT NULL,
  PRIMARY KEY (PRODUCT_ID, SERIAL_NUMBER)
  -- PRIMARY KEY (PRODUCT_ID, LOCATION_ID)
);

-- ============== TO ADD LATER ============== 
-- CREATE TABLE INVENTORY.LOCATION(
--   LOCATION_ID VARCHAR(14) PRIMARY KEY,
--   NAME VARCHAR(256) NOT NULL UNIQUE,
--   ADDRESS VARCHAR(256),
--   POSTAL_CODE VARCHAR(12),
--   CITY VARCHAR(256),
--   COUNTRY VARCHAR(256)
-- );

-- CREATE TABLE INVENTORY.VENDOR(
--   VENDOR_ID VARCHAR(14) PRIMARY KEY,
--   NAME VARCHAR(256) NOT NULL,
--   EMAIL_ADDRESS VARCHAR(64),
--   PHONE_NUMBER VARCHAR(32)
-- );

-- CREATE TABLE INVENTORY.PURCHASE_ORDER(
--   PO_ID VARCHAR(14) PRIMARY KEY,
--   VENDOR_ID VARCHAR(14) NOT NULL,
--   USER_ID VARCHAR(32) NOT NULL,
--   STATUS VARCHAR(32) NOT NULL
-- );

-- CREATE TABLE INVENTORY.PURCHASE_ORDER_ITEM(
--   PO_ITEM_ID BIGSERIAL PRIMARY KEY,
--   PO_ID VARCHAR(14) NOT NULL,
--   PRODUCT_ID VARCHAR(14) NOT NULL,
--   QUANTITY BIGINT NOT NULL
-- );

-- CREATE TABLE INVENTORY.DELIVERY_NOTE(
--   DELIVERY_NOTE_ID VARCHAR(14) PRIMARY KEY,
--   PO_ID VARCHAR(14) NOT NULL,
--   LOCATION_ID VARCHAR(14) NOT NULL
-- );

-- CREATE TABLE INVENTORY.DELIVERY_QUANTITY(
--   DELIVERY_QUANTITY_ID BIGSERIAL PRIMARY KEY,
--   DELIVERY_NOTE_ID VARCHAR(14) NOT NULL,
--   PRODUCT_ID VARCHAR(14) NOT NULL,
--   LOCATION_ID VARCHAR(14) NOT NULL,
--   QUANTITY BIGINT NOT NULL
-- );

-- CREATE TABLE INVENTORY.DELIVERY_SERIAL_NUMBER(
--   PRODUCT_ID VARCHAR(14) NOT NULL,
--   SERIAL_NUMBER VARCHAR(64) NOT NULL,
--   DELIVERY_NOTE_ID VARCHAR(14) NOT NULL,
--   LOCATION_ID VARCHAR(14) NOT NULL,
--   PRIMARY KEY (PRODUCT_ID, SERIAL_NUMBER)
-- );

-- ALTER TABLE INVENTORY.QUANTITY ADD FOREIGN KEY (LOCATION_ID) REFERENCES INVENTORY.LOCATION(LOCATION_ID);

-- ALTER TABLE INVENTORY.SERIAL_NUMBER ADD FOREIGN KEY (LOCATION_ID) REFERENCES INVENTORY.LOCATION(LOCATION_ID);
-- ALTER TABLE INVENTORY.SERIAL_NUMBER ADD FOREIGN KEY (SERIAL_NUMBER) REFERENCES INVENTORY.DELIVERY_SERIAL_NUMBER(SERIAL_NUMBER);

-- ALTER TABLE INVENTORY.PURCHASE_ORDER ADD FOREIGN KEY (VENDOR_ID) REFERENCES INVENTORY.VENDOR(VENDOR_ID);

-- ALTER TABLE INVENTORY.PURCHASE_ORDER_ITEM ADD FOREIGN KEY (PO_ID) REFERENCES INVENTORY.PURCHASE_ORDER(PO_ID);
-- ALTER TABLE INVENTORY.PURCHASE_ORDER_ITEM ADD FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY.PRODUCT(PRODUCT_ID);

-- ALTER TABLE INVENTORY.DELIVERY_NOTE ADD FOREIGN KEY (PO_ID) REFERENCES INVENTORY.PURCHASE_ORDER(PO_ID);
-- ALTER TABLE INVENTORY.DELIVERY_NOTE ADD FOREIGN KEY (LOCATION_ID) REFERENCES INVENTORY.LOCATION(LOCATION_ID);

-- ALTER TABLE INVENTORY.DELIVERY_QUANTITY ADD FOREIGN KEY (DELIVERY_NOTE_ID) REFERENCES INVENTORY.DELIVERY_NOTE(DELIVERY_NOTE_ID);
-- ALTER TABLE INVENTORY.DELIVERY_QUANTITY ADD FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY.PRODUCT(PRODUCT_ID);
-- ALTER TABLE INVENTORY.DELIVERY_QUANTITY ADD FOREIGN KEY (LOCATION_ID) REFERENCES INVENTORY.LOCATION(LOCATION_ID);

-- ALTER TABLE INVENTORY.DELIVERY_SERIAL_NUMBER ADD FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY.PRODUCT(PRODUCT_ID);
-- ALTER TABLE INVENTORY.DELIVERY_SERIAL_NUMBER ADD FOREIGN KEY (DELIVERY_NOTE_ID) REFERENCES INVENTORY.DELIVERY_NOTE(DELIVERY_NOTE_ID);
-- ALTER TABLE INVENTORY.DELIVERY_SERIAL_NUMBER ADD FOREIGN KEY (LOCATION_ID) REFERENCES INVENTORY.LOCATION(LOCATION_ID);
-- ========================================== 

ALTER TABLE INVENTORY.QUANTITY ADD FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY.PRODUCT(PRODUCT_ID);

ALTER TABLE INVENTORY.SERIAL_NUMBER ADD FOREIGN KEY (PRODUCT_ID) REFERENCES INVENTORY.PRODUCT(PRODUCT_ID);

CREATE INDEX IDX_SERIAL_NUMBER ON INVENTORY.SERIAL_NUMBER(SERIAL_NUMBER);
